<h1>Post#list</h1>
<a href="/post/new" style="float:right; display:inline-block;">
    <button>New Post</button>
</a>

<% if user_signed_in? %>
    <p>Account : <%= current_user.email %></p>
    <img class="img img-thumbnail" style="width: 50px; height: 50px; object-fit: cover;" src="<%= current_user.profile %>">
    <%= link_to "Profile", user_profile_path %>
    <p><%= link_to "Logout", destroy_user_session_path, method: :delete, data: { confirm: "Do you want to logout?" } %></p>
<% else %>
    <p><%= link_to "Login", new_user_session_path %></p>
   
<% end %>
    
<div id="map" style="width: 100%; height: 300px;"></div>    

<ul><br>
    <% @posts.each do |post| %>
    <li>
        <h3>
            <%=post.id%>, <%=post.title%>
            
            <% if user_signed_in? %>
                <%= link_to 'Edit', post_edit_path(:id => post.id) if post.updatable_by? current_user %>
                <%= link_to 'Delete', post_delete_path(:id => post.id) if post.deletable_by? current_user %>
                <a href="/comment/new?id=<%=post.id%>">Comment</a>        
            <% end %>
        </h3>
        
        Contents: <%=post.contents%><br>
        Author: <%=post.user.name%><br>
        Date&Time: <%=post.created_at.in_time_zone('Eastern Time (US & Canada)').to_formatted_s(:short)%>
        
        <br>
        <ol>
            <% post.comments.each do |comment| %>
                <li><%=comment.contents%> 
                    <a href="/comment/delete?id=<%=post.id%>" style="text-decoration: none;">ⓧ</a>
                </li>
            <% end %>
        </ol>
        <hr>
    </li>
    <% end %>
</ul>

<div style="width: 100%; text-align: center;">
    <%= will_paginate @posts, :previous_label => t("Prev") %>
</div>



<script>
    var container = document.getElementById('map'); //지도를 담을 영역의 DOM 레퍼런스
    var options = { //지도를 생성할 때 필요한 기본 옵션
    	center: new daum.maps.LatLng(35.152665, 129.118203), //지도의 중심좌표.
    	level: 7 //지도의 레벨(확대, 축소 정도)
    };
    
    var map = new daum.maps.Map(container, options); //지도 생성 및 객체 리턴
    
    // var position = new daum.maps.LatLng(35.152665, 129.118203);
    // var marker = new daum.maps.Marker({
    //     position: position,
    //     clickable: true
    // });
    
    // marker.setMap(map);
    
    // var iwContent = '<div style="padding: 5px;">Gwangalli Beach</div>';
    // // var iwContent = "<div style=\"padding: 5px;\">Gwangalli beach</div>";
    // // ""와 '' 쓸 때, 겹치지 않게 조심해서 쓰기.
    
    // var iwRemovable = true;
    
    // var infoWindow = new daum.maps.InfoWindow({
    //     content: iwContent,
    //     removable: iwRemovable
    // });
    
    // daum.maps.event.addListener(marker, 'click', function() {
    //     infoWindow.open(map, marker);
    // })
    
    var positions = [
        <% @posts.each do |post| %>
            {
                content: '<div style="padding: 5px; width: 200px; text-align: center;"><%=post.title%><br><%=post.address%></div>',
                latlng: new daum.maps.LatLng(<%=post.lat%>,<%=post.lng%>)
            },
        <% end %>
        ];
    
    for (var i=0; i<positions.length; i++) {
        var marker = new daum.maps.Marker({
            map: map,
            position: positions[i].latlng
        });
        
        var infoWindow = new daum.maps.InfoWindow({
            content: positions[i].content
        });
        
        // 마커와 인포윈도우의 격리를 위해 익명하수로 만들어주기.
        // 익명함수를 선언하기 위해 함수 밖에 ()를 해준다.
        (function (marker, infoWindow) {
            daum.maps.event.addListener(marker, 'mouseover', function() {
                infoWindow.open(map, marker);
            });
            
            daum.maps.event.addListener(marker, 'mouseout', function() {
                infoWindow.close();
            });
            
            // 이 함수의 값으로 현재의 마커와 인포윈도우를 전달하기 위해 한번 더 써주기.
        })(marker, infoWindow);
        
    }
</script>